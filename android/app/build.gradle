def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'dev.flutter.flutter-gradle-plugin'


android {
    namespace = "com.solvtech.talk_to_draw_new"

    // Always use the latest installed SDK
    def latestSdk = 34  // fallback in case autodetect fails
    def sdkDir = System.getenv("ANDROID_HOME") ?: System.getenv("ANDROID_SDK_ROOT") ?: "${System.properties['user.home']}/Library/Android/sdk"
    def platformsDir = new File(sdkDir, "platforms")

    if (platformsDir.exists()) {
        def versions = platformsDir.listFiles()
                .findAll { it.name.startsWith("android-") }
                .collect { it.name.replace("android-", "").toInteger() }
                .sort()
        if (!versions.isEmpty()) {
            latestSdk = versions.last()
        }
    }

    compileSdk = latestSdk

    defaultConfig {
        applicationId = "com.solvtech.talk_to_draw_new"
        minSdk = 24
        targetSdk = 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }
}


flutter {
    source = "../.."
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.android.material:material:1.10.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'

}
